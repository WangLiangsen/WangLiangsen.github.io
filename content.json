[{"title":"5分钟入门MARKDOWN","date":"2019-01-17T16:16:16.954Z","path":"2019/01/18/markdown语法入门/","text":"什么是Markdown？Markdwon 是一种轻量级标记语言，由Aaron Swartz和John Gruber共同设计。它以纯文本形式（易读、易写、易更改）编写文档，并最终以HTLM格式发布。Markdown也可以理解为将以Markdown语法编写的语言转换成HTML内容的工具。 Aaron Swartz的传奇一生 14岁参与RSS 1.0规格标准制订。 2004年入读斯坦福大学，之后退学。 2005年创建 Infogami,之后与Reddit合并成为其合伙人。 2010年创立示进会（Demand Preogress）,积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。 2011年7月19日,因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。 2013年1月自杀身亡。 Tips注意：Markdown使用 # + * &gt; _ 等符号来标记，符号后面必须跟上至少1个空格才会被语法识别。 Markdown语法标题Markdown的标题用’# ‘标记在想要作为标题的文字开头加上1~6个#，依次表示一级到六级标题举例：# 一级标题## 二级标题### 三级标题 为了避免文字TOC出现混乱，本例不做输出演示。 换行在行尾添加两个空格（spacebar）加一个回车（enter）表示换行： 列表列表分为 无序列表 和 有序列表 无序列表用 - + * 作为打头标记举例：+ 项目1+ 项目2+ 项目3输出： 项目1 项目2 项目3 有序列表有序列表则使用数字加英文句点.来表示举例:1. 第一项2. 第二项3. 第三项输出： 第一项 第二项 第三项 引用引用以 &gt; 来表示，引用中又支持多级引用、标题、列表、代码块、分割线等常规语法。（也就是说：引用里面可以加标题，列表，嵌套引用等等。）举例：> 引用自百度文库>&gt; 引用自网易云音乐输出： 引用自百度文库 引用自网易云音乐 文字样式（字体）*斜体文本* **加粗文本** *斜粗体文本* \\删除文本 ` 底纹 ` &lt; sub&gt;下标文字&lt; /sub&gt; &lt; sup&gt;上标文字&lt; /sup&gt; &lt; u&gt;下划线文本&lt; /u&gt; 输出： 斜体文本 加粗文本 斜粗体文本 删除文本 底纹 下标文字 正常文字 上标文字 正常文字 下划线文本 图片与链接链接链接的形式: 内联 和 引用。这两种形式下链接文本的定界符都是 [中括号].要创建内联链接, 只需在链接文本的右括号后面紧接一对圆括号. 圆括号里面放所需的 URL 链接, 还可以放一个 可选 的链接标题, 标题要用引号包围. 自动链接：直接使用\\&lt; &gt;括起来 &lt;yourlink.xyz&gt; 链接： [ ]( ) [链接描述](链接的地址) 举例： This is [an example](http://example.com/ “Title”) inline link. This is an example \\http://example.com 输出： This is an example inline link. This is an example http://example.com 图片Markdown 使用了类似链接的语法来插入图片在链接的语法前面加一个感叹号: !也就是: 图片：![Alt text] (/path/to/img.jpg “Optional title”) 由于没有本地路径，此例子不做举例输出演示。 代码和代码块代码行引用的代码只有一行，可以用 ` 号将语句包起来。举例： `cout &lt;&lt; “Hello world” //this is an example of C++ outputing hello word` 输出： cout &lt;&lt; &quot;Hello world&quot; //this is an example of C++ outputing hello word 代码块（段）用一对\\将代码括起来，在第一个\\`\\`\\`之后，空格输入语言名称即可高亮代码。 1234567格式如下：\\``` [语言]这里是代码​\\ 举例： ``` C++ #includeint main(){ using namespace std; int x = 1; x = x++; //x = x + 1 cout &lt;&lt; x; return 0;} ``` 输出： 123456789#include&lt;iostream&gt;int main()&#123; using namespace std; int x = 1; x = x++; //x = x + 1 cout &lt;&lt; x; return 0;&#125; 分割线在一行中使用三个或三个以上的 * 可以添加分隔线，中间可以插入空格，但是不能有其他字符。 举例： *** 输出： 高级应用表格表格用竖线|分割不同列，用以下标记设置对齐方式 (ATTENTION！必须) ：居左:—- 居中:—-: 居右—-: 举例： |标题1|标题2|标题3| |:—|:—:|—:| |居左文本|居中文本|居右文本| 输出： 标题1 标题2 标题3 居左文本 居中文本 居右文本 脚注使用[^number ]来定义脚注 举例： 这是一个脚注的例子[^ 1] [^1 ]: 这里是脚注 输出： 这是一个脚注的例子[^1] 常用弥补Markdown的Html标签字体大小和颜色\\&lt; font face=”微软雅黑” color=”red” size=”6”&gt;字体及字体颜色和大小\\&lt; /font&gt;\\&lt; font color=”#0000ff”&gt;字体颜色&lt;/ font&gt; 字体及字体颜色和大小字体颜色 文本对齐方式&lt; p align=”left”&gt;居左文本&lt; /p&gt;&lt; p align=”center”&gt;居中文本&lt; /p&gt;&lt; p align=”right”&gt;居右文本&lt; /p&gt; 居左文本居中文本居右文本 任务列表任务列表支持Markdown的字体格式，支持链接，支持有序和无序列表。用- [ ]表示未完成用- [x]表示完成 举例： - [ ] links, formatting, and tags supported- [x] list syntax required (any unordered or ordered list supported)- [ ] this is a complete item- [x] this is an incomplete item 输出： links, formatting, and tags supported list syntax required (any unordered or ordered list supported) this is a complete item this is an incomplete item 转义字符转义字符就是想显示出Markdown语法内的标记字符，比如* _ - + 等。这篇教程在举例部分，为了显示语法就用了很多转义字符。 转义字符用 \\ 作为符号的前缀 在Visual Studio Code中编辑Markdown在扩展中心（ctrl+shift+x）安装Markdown all in one插件就能很方便的编辑和预览Markdown文件。快捷键如下： Key Command Ctrl + B 加粗 Ctrl + I 斜体 Alt + S 删除线 Ctrl + Shift + ] 标题 从一级到六级递增 Ctrl + Shift + [ 标题 从当前级到一级递减 Ctrl + M 数学公式环境 Alt + C Check/Uncheck task list item Ctrl + Shift + V Markdown预览 Ctrl + K V Toggle preview to side 参考文档本教程参考的文档如下： https://markdown-zh.readthedocs.io/en/latest/http://www.cycygogo.cn/2017/12/05/Markdown-Syntax/https://www.jianshu.com/p/ccfd81fe77d2 后记 此Markdown教程尽可能简单的讲解了Markdown的语法，在字体及列表中，除了*仍有很多其他标识符可以使用。本文只介绍了其中一种。 除了入门Markdown，本文也可留作日后语法备查。","tags":[{"name":"入门教程","slug":"入门教程","permalink":"http://WangLiangsen.github.io/tags/入门教程/"},{"name":"Markdown","slug":"Markdown","permalink":"http://WangLiangsen.github.io/tags/Markdown/"}]},{"title":"C++入门教程01","date":"2019-01-16T07:11:19.388Z","path":"2019/01/16/C++学习笔记01/","text":"开始学习C++关于C++的源文件C++的源代码(Source Code)文件扩展名为.C 或者.cpp Windows上的编译器Compile 对打开文件中的代码进行编译 Build 和 Make 编译项目中所有源代码文件，如果只有一个被修改则只编译一个 Build All 重新编译所有源代码文件的代码 Link 组合源代码和库代码 Run 或 Execute 运行程序（自动完成上述步骤） Debug/Release 以步进方式运行程序 Debug 中带有调试信息，程序较大，执行较慢 在Visual Studio上运行程序时，通常要加入cin.get(); 或者两句cin.get(); cin.get(); 目的是防止程序输出窗口一闪而过 Tips 可以对示例程序使用同一个项目，只在项目里增删源文件，可以节省空间和工作量 改正错误时应该首先改正第一个错误；如果在标识行上找不到错误，往往在上一行 C++基础语法 C++用 ; (分号)来区分语句结尾。 // 表示注释 也可以用/ / #include 表示预处理编译指令，如： #include&lt;iostream&gt; int main() 表示主函数头。 using namespace 表示使用什么名字空间，如：using namespace std; { }表示函数体，在花括号之间。 int型的main函数需要 return 一个整形的数作为返回值，通常为return 0; cin 和 coutcin 和 cout 在名字空间std内，分别用来输入和输出变量值/字符串 cin_ _用来输入字符。cin &gt;&gt; number 表示信息从cin流向number变量。 cout &lt;&lt; “a = ”&lt;&lt; a &lt;&lt; endl; 表示字符串和变量值流向cout。 输出为a=1(换行) 如果没有using namespace std; 就需要std::cout 或 using std::cout; 声明、赋值以及函数的概念声明语句int number = 8；//声明整形变量number同时初始化为8 C++通常在首次使用变量前才做声明；而C则是在函数体的开始部位声明所需变量。 赋值语句number = 25;_ //把25赋值给number变量。_ 如果出现传递等号的赋值，如a = b = c = 1; 是从右向左依次赋值 函数的概念 x = sqrt(6.25);_ //变量 &lt;&lt;函数返回值 = 函数名（参数列表）_ 有些函数不只一个参数，有些函数没有参数甚至没有返回值。 使用库函数前要包含相应库文件，如：#include&lt;cmath&gt; 使用用户自定义函数前要对函数原型进行声明，如：int func(int)； Main()函数的返回值传递给操作系统，也叫退出值。通常0表示程序运行成功，非零则表示存在问题。","tags":[{"name":"C++","slug":"C","permalink":"http://WangLiangsen.github.io/tags/C/"},{"name":"入门教程","slug":"入门教程","permalink":"http://WangLiangsen.github.io/tags/入门教程/"}]}]