[{"title":"C++入门教程01","date":"2019-01-16T07:11:19.388Z","path":"2019/01/16/C++学习笔记01/","text":"开始学习C++关于C++的源文件C++的源代码(Source Code)文件扩展名为.C 或者.cpp Windows上的编译器Compile 对打开文件中的代码进行编译 Build 和 Make 编译项目中所有源代码文件，如果只有一个被修改则只编译一个 Build All 重新编译所有源代码文件的代码 Link 组合源代码和库代码 Run 或 Execute 运行程序（自动完成上述步骤） Debug/Release 以步进方式运行程序 Debug 中带有调试信息，程序较大，执行较慢 在Visual Studio上运行程序时，通常要加入cin.get(); 或者两句cin.get(); cin.get(); 目的是防止程序输出窗口一闪而过 Tips 可以对示例程序使用同一个项目，只在项目里增删源文件，可以节省空间和工作量 改正错误时应该首先改正第一个错误；如果在标识行上找不到错误，往往在上一行 C++基础语法 C++用 ; (分号)来区分语句结尾。 // 表示注释 也可以用/ / #include 表示预处理编译指令，如： #include&lt;iostream&gt; int main() 表示主函数头。 using namespace 表示使用什么名字空间，如：using namespace std; { }表示函数体，在花括号之间。 int型的main函数需要 return 一个整形的数作为返回值，通常为return 0; cin 和 coutcin 和 cout 在名字空间std内，分别用来输入和输出变量值/字符串 cin_ _用来输入字符。cin &gt;&gt; number 表示信息从cin流向number变量。 cout &lt;&lt; “a = ”&lt;&lt; a &lt;&lt; endl; 表示字符串和变量值流向cout。 输出为a=1(换行) 如果没有using namespace std; 就需要std::cout 或 using std::cout; 声明、赋值以及函数的概念声明语句int number = 8；//声明整形变量number同时初始化为8 C++通常在首次使用变量前才做声明；而C则是在函数体的开始部位声明所需变量。 赋值语句number = 25;_ //把25赋值给number变量。_ 如果出现传递等号的赋值，如a = b = c = 1; 是从右向左依次赋值 函数的概念 x = sqrt(6.25);_ //变量 &lt;&lt;函数返回值 = 函数名（参数列表）_ 有些函数不只一个参数，有些函数没有参数甚至没有返回值。 使用库函数前要包含相应库文件，如：#include&lt;cmath&gt; 使用用户自定义函数前要对函数原型进行声明，如：int func(int)； Main()函数的返回值传递给操作系统，也叫退出值。通常0表示程序运行成功，非零则表示存在问题。","tags":[{"name":"C++","slug":"C","permalink":"WangLiangsen.github.io/tags/C/"},{"name":"入门教程","slug":"入门教程","permalink":"WangLiangsen.github.io/tags/入门教程/"}]}]